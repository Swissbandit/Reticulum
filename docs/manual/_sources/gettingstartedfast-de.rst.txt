********************
Schneller Einstieg
********************

Wie Sie am besten mit dem Reticulum Network Stack beginnen, hängt davon ab, was Sie
Sie tun möchten. Dieser Leitfaden skizziert sinnvolle Einstiegswege für verschiedene
Szenarien.


Versuchen Sie es mit einem Reticulum-basierten Programm
=============================================

Wenn Sie einfach nur ein mit Reticulum erstelltes Programm ausprobieren möchten, gibt es ein paar verschiedene
Programme, die eine grundlegende Kommunikation und eine Reihe anderer nützlicher Funktionen
auch über Reticulum-Netzwerke mit extrem geringer Bandbreite ermöglichen.

Mit diesen Programmen können Sie ein Gefühl dafür bekommen, wie Reticulum funktioniert. Sie wurden entwickelt
LoRa- oder Packet-Radio-Netzwerken zu arbeiten, können aber auch vollständig über
über lokales WiFi, kabelgebundenes Ethernet, das Internet oder eine beliebige Kombination.

So ist es einfach, mit dem Experimentieren zu beginnen, ohne dass man irgendwelche Funkgeräte oder
Transceiver oder eine Infrastruktur aufzubauen, nur um es auszuprobieren. Das Starten der Programme auf separaten
Geräten, die mit demselben WiFi-Netzwerk verbunden sind, reicht für den Anfang aus.
Funkschnittstellen können dann später hinzugefügt werden.

Nomad Network
^^^^^^^^^^^^^

Das terminalbasierte Programm "Nomad Network <https://github.com/markqvist/nomadnet>`_
bietet eine vollständige verschlüsselte Kommunikationssuite, die mit Reticulum erstellt wurde. Es bietet
verschlüsselte Nachrichtenübermittlung (sowohl direkte als auch verzögerte Zustellung für Offline-Benutzer), Dateiaustausch,
und hat einen eingebauten Textbrowser und Seitenserver mit Unterstützung für dynamisch gerenderte Seiten,
Benutzerauthentifizierung und mehr.

.. image:: screenshots/nomadnet_3.png
    :target: _images/nomadnet_3.png

`Nomad Network <https://github.com/markqvist/nomadnet>`_ ist ein benutzerorientierter Client
für das Nachrichten- und Informationsaustauschprotokoll
`LXMF <https://github.com/markqvist/lxmf>`_, ein weiteres mit Reticulum erstelltes Projekt.

Sie können Nomad Network installieren über pip:

.. code::

   # Install ...
   pip3 install nomadnet

   # ... and run
   nomadnet

**Bitte beachten Sie**: Wenn Sie pip zum ersten Mal verwenden, um ein Programm auf Ihrem System zu installieren
auf Ihrem System verwenden, müssen Sie Ihr System möglicherweise neu starten, damit Ihr Programm
verfügbar ist. Wenn Sie beim Ausführen des Programms die Fehlermeldung "command not found" oder eine ähnliche Meldung erhalten
Programms erhalten, starten Sie Ihr System neu und versuchen Sie es erneut.

Sideband
^^^^^^^^

Wenn Sie lieber ein Programm mit einer grafischen Benutzeroberfläche verwenden möchten, können Sie sich
Sideband <https://unsigned.io/sideband>`_ ansehen, das für Android, Linux und macOS verfügbar ist,
Linux und macOS verfügbar ist.

.. image:: screenshots/sideband_1.png
    :align: center
    :target: _images/sideband_1.png

Sideband befindet sich derzeit in einem frühen Stadium der Entwicklung, bietet aber bereits grundlegende
Kommunikationsfunktionen und interagiert mit Nomad Network oder jedem anderen LXMF-Client.

Verwendung der mitgelieferten Dienstprogramme
=============================================
Reticulum wird mit einer Reihe von Dienstprogrammen ausgeliefert, die die
die Verwaltung Ihres Netzwerks, die Überprüfung der Konnektivität und die Bereitstellung von Reticulum für andere
Programme auf Ihrem System verfügbar machen.

Sie können ``rnsd`` verwenden, um Reticulum als Hintergrund- oder Vordergrunddienst laufen zu lassen,
und die Dienstprogramme ``rnstatus``, ``rnpath`` und ``rnprobe`` zum Anzeigen und Abfragen von
Netzwerkstatus und -konnektivität abzufragen.

Um mehr über diese Hilfsprogramme zu erfahren, schauen Sie sich das Kapitel
:ref:`Benutzung von Reticulum auf Ihrem System<using-main>` dieses Handbuchs.


Erstellen eines Netzwerks mit Reticulum
=============================================
Um ein Netzwerk zu erstellen, müssen Sie eine oder mehrere *Schnittstellen* angeben, die
Reticulum verwenden soll. Dies geschieht in der Konfigurationsdatei von Reticulum, die standardmäßig
die sich standardmäßig unter ``~/.reticulum/config`` befindet. Sie können diese Datei von Hand bearbeiten,
oder das interaktive Dienstprogramm ``rnsconfig`` verwenden. 

Wenn Reticulum zum ersten Mal gestartet wird, erstellt es eine Standard
Konfigurationsdatei mit einer aktiven Schnittstelle. Diese Standardschnittstelle verwendet
Ihre vorhandenen Ethernet- und WiFi-Netzwerke (falls vorhanden) und erlaubt Ihnen nur die
Kommunikation mit anderen Reticulum-Peers innerhalb Ihrer lokalen Broadcast-Domänen.

Um weiter zu kommunizieren, müssen Sie eine oder mehrere Schnittstellen hinzufügen. Die Standard
Konfiguration enthält eine Reihe von Beispielen, die von der Verwendung von TCP über das
Internet, bis hin zu LoRa- und Packet-Radio-Schnittstellen.

Mit Reticulum müssen Sie nur die Schnittstellen konfigurieren, über die Sie kommunizieren möchten.
über die Sie kommunizieren möchten. Sie müssen keine Adressräume, Subnetze, Routing-Tabellen
oder andere Dinge, die Sie vielleicht von anderen Netzwerktypen gewohnt sind.

Sobald Reticulum weiß, welche Schnittstellen es verwenden soll, wird es automatisch
Topographie und konfiguriert den Datentransport zu allen ihm bekannten Zielen
Ziele, die es kennt.

In Situationen, in denen Sie bereits über ein etabliertes WiFi- oder Ethernet-Netzwerk verfügen, und
viele Geräte, die dieselben externen Reticulum-Netzwerkpfade nutzen möchten (z. B. über
LoRa), reicht es oft aus, ein System als Reticulum-Gateway zu verwenden, indem
ein System als Reticulum-Gateway fungiert, indem es alle externen Schnittstellen zur Konfiguration dieses Systems hinzufügt und dann den Transport auf diesem System aktiviert. Jedes
Jedes andere Gerät in Ihrem lokalen WiFi kann sich dann mit diesem größeren Reticulum
Netzwerk zu verbinden, indem es einfach die Standardkonfiguration (:ref:`AutoInterface<interfaces-auto>`) verwendet.

Möglicherweise reichen die Beispiele in der Konfigurationsdatei für den Anfang aus. Wenn
Sie mehr Informationen wünschen, können Sie die Kapitel :ref:`Building Networks<networks-main>`
und :ref:`Schnittstellen<Schnittstellen-Haupt>` in diesem Handbuch lesen.

Verbinden von Reticulum-Instanzen über das Internet
================================================
Reticulum bietet derzeit zwei Schnittstellen für die Verbindung von Instanzen über das Internet an: :ref:`TCP<interfaces-tcps>`
und :ref:`I2P<Schnittstellen-i2p>`. Jede Schnittstelle bietet einen anderen Funktionsumfang, und Reticulum 
Benutzer sollten sorgfältig die Schnittstelle auswählen, die ihren Bedürfnissen am besten entspricht. 

Das ``TCPServerInterface`` ermöglicht es Benutzern, eine Instanz zu hosten, die über TCP/IP zugänglich ist. Diese
Methode ist im Allgemeinen schneller, hat eine geringere Latenz und ist energieeffizienter als die Verwendung von ``I2PInterface``,
Allerdings werden dabei auch mehr Daten über den Server-Host preisgegeben.

Bei TCP-Verbindungen wird die IP-Adresse sowohl Ihrer Instanz als auch des Servers für jeden sichtbar, der
der die Verbindung inspiziert. Jemand könnte diese Informationen nutzen, um Ihren Standort oder Ihre Identität zu ermitteln. Angreifer 
die Ihre Pakete inspizieren, können möglicherweise Metadaten der Pakete aufzeichnen, wie z. B. den Zeitpunkt der Übertragung und die Größe der Pakete.
Obwohl Reticulum den Datenverkehr verschlüsselt, ist dies bei TCP nicht der Fall, so dass ein Angreifer mithilfe der
Paketinspektion herausfinden, dass ein System mit Reticulum arbeitet und welche anderen IP-Adressen eine Verbindung zu ihm herstellen.
Das Hosten einer öffentlich erreichbaren Instanz über TCP erfordert auch eine öffentlich erreichbare IP-Adresse,
die die meisten Internetverbindungen nicht mehr bieten.

Das ``I2PInterface`` leitet Nachrichten über das `Invisible Internet Protocol 
(I2P) <https://geti2p.net/en/>`_. Um diese Schnittstelle zu benutzen, müssen Benutzer auch einen I2P-Daemon
parallel zu ``rnsd`` laufen. Für immer aktive I2P-Knoten wird empfohlen, `i2pd <https://i2pd.website/>`_ zu verwenden. 

Standardmäßig verschlüsselt und mischt I2P den gesamten über das Internet gesendeten Datenverkehr und 
und verbirgt sowohl die IP-Adressen der Sender- als auch der Empfängerinstanz von Reticulum. Der Betrieb eines I2P-Knotens 
wird auch die verschlüsselten Pakete anderer I2P-Benutzer weiterleiten, was zusätzliche
Bandbreite und Rechenleistung, aber auch Timing-Angriffe und andere Formen der 
Deep-Packet-Inspection erheblich erschwert.

Mit I2P können Benutzer auch global verfügbare Reticulum-Instanzen von nicht-öffentlichen IPs und hinter Firewalls und NAT hosten.

Im Allgemeinen wird empfohlen, einen I2P-Knoten zu verwenden, wenn Sie eine öffentlich zugängliche
Instanz hosten und dabei die Anonymität wahren wollen. Wenn Sie mehr Wert auf Leistung legen und eine etwas
einfacheres Setup, verwenden Sie TCP.


Anschluss an das öffentliche Testnetz
===========================================

Ein experimentelles öffentliches Testnetz wurde sowohl über I2P als auch über TCP zugänglich gemacht. Sie können diesem Netz beitreten
teilnehmen, indem Sie eine der folgenden Schnittstellen zu Ihrer ``.reticulum/config``-Datei hinzufügen:

.. code::

  # TCP/IP Schnittstelle zum Dublin hub
  [[RNS Testnet Dublin]]
    type = TCPClientInterface
    enabled = yes
    target_host = dublin.connect.reticulum.network
    target_port = 4965

  # TCP/IP Schnittstelle zum Frankfurt hub
  [[RNS Testnet Dublin]]
    type = TCPClientInterface
    enabled = yes
    target_host = frankfurt.connect.reticulum.network
    target_port = 5377

  # Schnittstelle zum I2P hub A
  [[RNS Testnet I2P Hub A]]
    type = I2PInterface
    enabled = yes
    peers = uxg5kubabakh3jtnvsipingbr5574dle7bubvip7llfvwx2tgrua.b32.i2p

Viele andere Reticulum-Instanzen sind mit diesem Testnetz verbunden, und Sie können sich auch
über andere Zugangspunkte, wenn Sie diese kennen. Es gibt keinerlei Kontrolle über das Netzwerk
Topographie, Nutzung oder welche Arten von Instanzen sich verbinden. Gelegentlich wird es auch benutzt
um verschiedene Ausfallszenarien zu testen, und es gibt keine Verfügbarkeits- oder Servicegarantien.


Hinzufügen von Funkschnittstellen
==============================================
Sobald Sie Reticulum installiert haben und es funktioniert, können Sie Funkschnittstellen mit
mit jeder kompatiblen Hardware, die Sie zur Verfügung haben. Reticulum unterstützt eine breite Palette von Funkgeräten
Wenn Sie bereits über Funkgeräte verfügen, ist es sehr wahrscheinlich, dass diese mit Reticulum
mit Reticulum funktionieren. Informationen zur Konfiguration finden Sie im Abschnitt
:ref:`Schnittstellen<Schnittstellen-Hauptteil>` in diesem Handbuch.

Wenn Sie noch keine Transceiver-Hardware zur Verfügung haben, können Sie einfach und
einen :ref:`RNode<rnode-main>` bauen, einen Allzweck-Digitalfunkempfänger mit großer Reichweite
Langstrecken-Digitalfunkgerät, das sich leicht in Reticulum integrieren lässt.

Um eine solche selbst zu erstellen, muss eine benutzerdefinierte Firmware auf einer unterstützten LoRa
Entwicklungsboard mit einem Auto-Installations-Skript. Bitte lesen Sie das :ref:`Kommunikationshardware<hardware-main>`
Kapitel für eine Anleitung. Wenn Sie es vorziehen, eine fertige Einheit zu kaufen, können Sie sich auf die
:ref:`Liste der Anbieter<rnode-Lieferanten>`. Für weitere Informationen über RNode können Sie auch
können Sie auch auf diese zusätzlichen externen Ressourcen zurückgreifen:

* `Wie Sie Ihre eigenen RNodes herstellen <https://unsigned.io/how-to-make-your-own-rnodes/>`_
* `Installation der RNode-Firmware auf kompatiblen LoRa-Geräten <https://unsigned.io/installing-rnode-firmware-on-t-beam-and-lora32-devices/>`_
* `Privates, sicheres und unzensierbares Messaging über ein LoRa-Mesh <https://unsigned.io/private-messaging-over-lora/>`_
* `RNode Firmware <https://github.com/markqvist/RNode_Firmware/>`_

Wenn Sie über Kommunikationshardware verfügen, die noch nicht von einem der
:ref:`vorhandenen Schnittstellentypen<interfaces-main>` unterstützt wird, aber Ihrer Meinung nach für die Verwendung mit Reticulum geeignet wäre,
können Sie sich gerne auf den `GitHub Diskussionsseiten <https://github.com/markqvist/Reticulum/discussions>`_
und vorschlagen, eine Schnittstelle für die Hardware hinzuzufügen.


Entwickeln Sie ein Programm mit Reticulum
===========================================
Wenn Sie Programme entwickeln möchten, die Reticulum verwenden, ist der einfachste Weg, mit der
ist es, die neueste Version von Reticulum über pip zu installieren:

.. code::

   pip3 install rns

Mit dem obigen Befehl werden Reticulum und die Abhängigkeiten installiert, und Sie sind
bereit, RNS zu importieren und in Ihren eigenen Programmen zu verwenden. Der nächste Schritt wird höchstwahrscheinlich
wahrscheinlich sein, sich einige :ref:`Beispielprogramme<examples-main>` anzusehen.

Um die Funktionalität zu erweitern, können Sie optionale Abhängigkeiten installieren:

.. code::

   pip3 install pyserial netifaces


Weitere Informationen finden Sie in der :ref:`API-Referenz<api-main>`.


An der Entwicklung von Reticulum mithelfen
==============================================
Wenn Sie sich an der Entwicklung von Reticulum und den zugehörigen
teilnehmen möchten, sollten Sie sich den aktuellen Quellcode von GitHub besorgen. In diesem Fall
verwenden Sie nicht pip, sondern versuchen Sie dieses Rezept:

.. code::

    # Install dependencies
    pip3 install cryptography pyserial netifaces

    # Clone repository
    git clone https://github.com/markqvist/Reticulum.git

    # Move into Reticulum folder and symlink library to examples folder
    cd Reticulum
    ln -s ../RNS ./Examples/

    # Run an example
    python3 Examples/Echo.py -s

    # Unless you've manually created a config file, Reticulum will do so now,
    # and immediately exit. Make any necessary changes to the file:
    nano ~/.reticulum/config

    # ... and launch the example again.
    python3 Examples/Echo.py -s

    # You can now repeat the process on another computer,
    # and run the same example with -h to get command line options.
    python3 Examples/Echo.py -h

    # Run the example in client mode to "ping" the server.
    # Replace the hash below with the actual destination hash of your server.
    python3 Examples/Echo.py 3e12fc71692f8ec47bc5

    # Have a look at another example
    python3 Examples/Filetransfer.py -h

Wenn Sie mit den grundlegenden Beispielen experimentiert haben, ist es an der Zeit, das folgende Kapitel zu lesen
:ref:`Verständnis des Retikulums<Verständnis-Haupt>` zu lesen. Bevor Sie einen
Pull-Request einreichen, ist es wahrscheinlich eine gute Idee, sich im
Forum auf GitHub <https://github.com/markqvist/Reticulum/discussions>`_ vorzustellen,
oder einen der Entwickler oder Betreuer zu fragen, wo man am besten anfängt.


Reticulum auf ARM64
==============================================
Auf einigen Architekturen, einschließlich ARM64, haben nicht alle Abhängigkeiten vorkompilierte
Binärdateien. Auf solchen Systemen müssen Sie ``python3-dev`` installieren, bevor Sie
vor der Installation von Reticulum oder von Programmen, die von Reticulum abhängen.

.. code::

   # Install Python and development packages
   sudo apt update
   sudo apt install python3 python3-pip python3-dev

   # Install Reticulum
   python3 -m pip install rns


Reticulum auf Android
==============================================
Reticulum kann auf Android auf verschiedene Arten verwendet werden. Der einfachste Weg zum
ist die Verwendung einer App wie `Sideband <https://unsigned.io/sideband>`_.

Für mehr Kontrolle und Funktionen können Sie Reticulum und verwandte Programme über
die `Termux-App <https://termux.com/>`_, die zum Zeitpunkt des Schreibens auf
F-droid <https://f-droid.org>`_.

Termux ist ein Terminalemulator und eine Linux-Umgebung für Android-basierte Geräte,
die die Möglichkeit bietet, viele verschiedene Programme und Bibliotheken zu nutzen,
einschließlich Reticulum.

Da das Python-Modul cryptography.io keine vorgefertigten Räder für
Android anbietet, funktioniert die standardmäßige Ein-Zeilen-Installation von Reticulum nicht unter Android,
und es sind ein paar zusätzliche Befehle erforderlich.

Führen Sie in Termux die folgenden Schritte aus:

.. code::

    # First, make sure indexes and packages are up to date.
    pkg update
    pkg upgrade

    # Then install dependencies for the cryptography library.
    pkg install python build-essential openssl libffi rust

    # Make sure pip is up to date, and install the wheel module.
    pip3 install wheel pip --upgrade

    # To allow the installer to build the cryptography module,
    # we need to let it know what platform we are compiling for:
    export CARGO_BUILD_TARGET="aarch64-linux-android"

    # Start the install process for the cryptography module.
    # Depending on your device, this can take several minutes,
    # since the module must be compiled locally on your device.
    pip3 install cryptography

    # If the above installation succeeds, you can now install
    # Reticulum and any related software
    pip3 install rns

Es ist auch möglich, Reticulum in Apps einzubinden, zb als
Android APKs. Eine ausführliche Anleitung und ein Beispiel-Quellcode werden
hier zu einem späteren Zeitpunkt veröffentlicht. Bis dahin können Sie den `Sideband-Quellcode <https://github.com/markqvist/sideband>`_ als Beispiel und Startpunkt verwenden.

Pure-Python Reticulum
==============================================
In einigen seltenen Fällen und bei obskuren Systemtypen ist es nicht möglich, eine
eine oder mehrere Abhängigkeiten zu installieren

Auf ungewöhnlicheren Systemen und in einigen seltenen Fällen ist es möglicherweise nicht möglich
ein oder mehrere der oben genannten Module zu installieren oder gar zu kompilieren. In solchen Situationen,
können Sie das Paket ``rnspure`` anstelle des Pakets ``rns`` verwenden. Das ``rnspure``
Paket benötigt keine externen Abhängigkeiten für die Installation. Bitte beachten Sie, dass der
eigentliche Inhalt der Pakete ``rns`` und ``rnspure`` *völlig identisch* ist.
Der einzige Unterschied besteht darin, dass das Paket ``rnspure`` keine Abhängigkeiten auflistet, die für die Installation
für die Installation.

Unabhängig davon, wie Reticulum installiert und gestartet wird, lädt es externe Abhängigkeiten
nur, wenn sie *benötigt* und *verfügbar* sind. Wenn Sie Reticulum zum Beispiel auf einem System verwenden wollen
auf einem System verwenden wollen, das ``pyserial`` nicht unterstützt, ist es durchaus möglich, dies mit dem
Paket ``rnspure`` zu verwenden, aber Reticulum kann dann keine seriellen Schnittstellen verwenden.
Alle anderen verfügbaren Module werden weiterhin geladen, wenn sie benötigt werden.

**Bitte beachten Sie!** Wenn Sie das Paket `rnspure` verwenden, um Reticulum auf Systemen zu betreiben, die
die `PyCA/Kryptographie <https://github.com/pyca/cryptography>`_ nicht unterstützen, ist es
ist es wichtig, dass Sie den Abschnitt :ref:`Cryptographic Primitives <understanding-primitives>`` lesen und verstehen.
Abschnitt dieses Handbuchs lesen und verstehen.